vignette("RSelenium-docker", package = "RSelenium")
install.packages("RSelenium")
sys.status()
vignette("RSelenium-docker", package = "RSelenium")
library(RSelenium)
system("
sudo docker run -d -p 4445:4444 selenium/standalone-firefox:2.53.0
sudo docker ps
")
# read the bird list
birds <- c("Wood duck", "White-winged guan", "Rodrigues night heron", "Sri Lanka green pigeon", "Chinese crested tern", "Swahili sparrow", "Lesser Antillean swift", "Thick-billed raven", "Emerald-chinned hummingbird", "Auckland shag")
i = 1
for(bird in birds)
{
remDr <- remoteDriver(port = 4445L)
print(i)
print(bird)
remDr$open()
remDr$navigate("https://scholar.google.de/scholar?hl=de&q=&btnG=&lr=")
searchElem <- remDr$findElement(using = 'id', value = "gs_hdr_frm_in_txt")
buttElem <- remDr$findElement(using = 'id', value = "gs_hdr_tsb")
#searchElem$sendKeysToElement(list("Pied flycatcher AND abundance"))
searchElem$sendKeysToElement(list(paste(bird, "AND abundance")))
buttElem$clickElement()
out <- remDr$findElements(using = "class name", value="gs_a")[[1]]$getElementText()
#pdf <- remDr$findElements(using = "class name", value="gs_ggsd")
message(out)
remDr$close()
i = i + 1
}
Rselenium
library(RSelenium)
tree.list <- read.csv("http://www.bgci.org/global_tree_search_trees.csv")
head(tree.list)
tree.list <- read.csv("http://www.bgci.org/global_tree_search_trees.csv")
head(tree.list)
tree.list <- read.csv("http://www.bgci.org/global_tree_search_trees.csv")[,1]
head(tree.list)
tree.list <- as.character(read.csv("http://www.bgci.org/global_tree_search_trees.csv")[,1])
get.tree <- function(genus, species)
{
genus <- as.character(genus)
species <- as.character(species)
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
return(out)
}
get.tree("Abies","alba")
get.tree <- function(genus, species)
{
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
return(out)
}
get.tree("Abies","alba")
get.tree <- function(genus, species)
{
# open the remote driver
remDr$open()
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
# close the remote driver
remDr$close()
return(out)
}
get.tree("Abies","alba")
get.tree <- function(genus, species)
{
# open the remote driver
remDr$open()
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
# close the remote driver
remDr$close()
return(out)
}
get.tree("Abies","alba")
remDr <- remoteDriver(port = 4445L)
get.tree <- function(genus, species)
{
# open the remote driver
remDr$open()
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
# close the remote driver
remDr$close()
return(out)
}
get.tree("Abies","alba")
remDr <- remoteDriver(port = 4445L)
get.tree <- function(genus, species)
{
# open the remote driver
remDr <- remoteDriver(port = 4445L)
remDr$open()
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
# close the remote driver
remDr$close()
return(out)
}
get.tree("Abies","alba")
library(RSelenium)
library(XML)
library(magrittr)
library(plyr)
get.tree <- function(genus, species)
{
# open the remote driver
remDr <- remoteDriver(port = 4445L)
remDr$open()
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
# close the remote driver
remDr$close()
return(out)
}
get.tree("Abies","alba")
get.tree <- function(genus, species)
{
# open the remote driver
remDr <- remoteDriver(port = 4445L)
remDr$open()
# go to the webpage
remDr$navigate("http://www.bgci.org/global_tree_search.php?sec=globaltreesearch")
remDr$refresh() # refresh the page
# create R objects from the website elements
genusElem <- remDr$findElement(using = 'id', value = "genus-field")
specElem <- remDr$findElement(using = 'id', value = "species-field")
buttElem <- remDr$findElement(using = 'class', value = "btn_ohoDO")
# fill in the forms with the genus and species names
genusElem$sendKeysToElement(list(genus))
specElem$sendKeysToElement(list(species))
# click the search button
buttElem$clickElement()
# get the output
out <- remDr$findElement(using = "css", value="td.cell_1O3UaG:nth-child(4)")
out <- out$getElementText()
# close the remote driver
remDr$close()
return(out)
}
get.tree("Abies","alba")
remDr <- remoteDriver(port = 4445L)
remDr$open()
tree.info <- get.tree("Abies","alba")
tree.info
install.packages("rvest")
html <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
library(rvest)
html <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
html
cast <- html_nodes(html, xpath="//*[(@id = "Argentina")]")
cast <- html_nodes(html, "//*[(@id = "Argentina")]")
library(rvest)
html <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
cast <- html_nodes(html, "//*[(@id = "Argentina")]")
html_nodes(html, "//*[(@id = "Argentina")]")
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
html_nodes(nobel.page, "//*[(@id = "Argentina")]")
html_nodes(nobel.page, "#Argentina")
html_nodes(nobel.page, "h2")
#Argentina
html_nodes(nobel.page, "#Argentina")
html_nodes(nobel.page, "h2")
library(magrittr)
html_nodes(nobel.page, "h2") %>% extract2(1)
html_nodes(nobel.page, "h2") %>% extract2(1) %>% html_nodes("img")
html_nodes(nobel.page, "h2") %>% extract2(1) %>% html_nodes(id)
?extract2
html_nodes(nobel.page, "h2") %>% html_table()
nob.table <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_Nobel_laureates_per_capita")
html_table(nob.table, "#mw-content-text > div > table:nth-child(9)")
html_node(nob.table, "#mw-content-text > div > table:nth-child(9)")
html_node(nob.table, "#mw-content-text > div > table:nth-child(9)") %>% html_table()
html_node(nob.table, "//*[@id="mw-content-text"]/div/table[1]
") %>% html_table()
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
html_nodes(nobel.page, "h2") %>% html_text()
html_nodes(nobel.page, "h2 span") %>% html_text()
html_nodes(nobel.page, "//*[contains(concat( " ", @class, " " ), concat( " ", "mw-headline", " " ))]") %>% html_text()
google_form("1M9B8DsYNFyDjpwSK6ur_bZf8Rv_04ma3rmaaBiveoUI")
nobel.page %>% html_nodes("h2") %>% html_text()
?extract
nobel.page %>% html_nodes("h2") %>% extract2()
nobel.page %>% html_nodes("h2") %>% extract2(1)
nobel.page %>% html_nodes("li") %>% extract2(1)
nobel.page %>% html_nodes("li") %>% html_text()
nobel.page %>% html_nodes("//*[@id="mw-content-text"]/div/ol[1]") %>% html_text()
nobel.page %>% html_nodes("//*[@id='mw-content-text']/div/ol[1]") %>% html_text()
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
nobel.page %>% html_nodes("//*[@id='mw-content-text']/div/ol[1]") %>% html_text()
nobel.page %>% html_nodes("//*[@id='mw-content-text']/div/ol") %>% html_text()
nobel.page %>% html_nodes("#mw-content-text > div > ol:nth-child(12)") %>% html_text()
nobel.page %>% html_nodes("#mw-content-text > div > ol:nth-child(1)") %>% html_text()
nobel.page %>% html_nodes("#mw-content-text > div > ol:nth-child(12)") %>% html_text()
nobel.page %>% html_nodes("#mw-content-text > div > ol:nth-child(12)") %>% html_table()
nobel.page %>% html_nodes("#mw-content-text > div > ol:nth-child(12)") %>% html_text()
nobel.page %>% html_nodes("//*[@id='Argentina']") %>% html_text()
nobel.page %>% html_nodes("//*[@id="Argentina"]") %>% html_text()
library(rvest)
library(magrittr)
# simple example when stuff is organized in a html table already
nob.table <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_Nobel_laureates_per_capita")
# we can use the css selector here:
html_node(nob.table, "#mw-content-text > div > table:nth-child(9)") %>% html_table()
nob.table <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_Nobel_laureates_per_capita")
html_node(nob.table, "#mw-content-text > div > table:nth-child(9)") %>% html_table()
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
nobel.page %>% html_nodes("#mw-content-text > div > ol:nth-child(12)") %>% html_text()
nobel.page %>% html_nodes("//*[@id="Argentina"]") %>% html_text()
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
nobel.page %>% html_nodes("#mw-content-text > div > ol:nth-child(12)") %>% html_text()
nobel.page %>% html_nodes("h2") %>% html_text()
nobel.page %>% html_nodes("h2:after") %>% html_text()
nobel.page %>% html_nodes("h2::after") %>% html_text()
nobel.page %>% html_nodes("h2.mw-headline") %>% html_text()
nobel.page %>% html_nodes("#h2.mw-headline") %>% html_text()
nobel.page %>% html_nodes("h2.mw-headline") %>% html_text()
nobel.page %>% html_nodes("h2 > div") %>% html_text()
nobel.page %>% html_nodes("h2 + div") %>% html_text()
nobel.page %>% html_nodes("#Argentina + div") %>% html_text()
nobel.page %>% html_nodes("h2 + ol") %>% html_text()
nobel.page %>% html_nodes("#collapsibleTable0 + h2 + ol") %>% html_text()
nobel.page %>% html_nodes("collapsibleTable0 + h2 + ol") %>% html_text()
nobel.page %>% html_nodes("collapsibleTable0 + h2 + ol") %>% html_text()
nobel.page %>% html_nodes("collapsibleTable0") %>% html_text()
nobel.page %>% html_nodes("#collapsibleTable0 > thead > tr > th.headerSort.headerSortDown + h2 + ol") %>% html_text()
nobel.page %>% html_nodes("h2 + ol") %>% html_text()
a <- nobel.page %>% html_nodes("h2 + ol") %>% html_text()
class(a)
a
countries %>% html_nodes("h2") %>% html_text()
countries <-  html_nodes("h2") %>% html_text()
countries <-  html_nodes(nobel.page, "h2") %>% html_text()
countries
countries <-  html_nodes(nobel.page, "#mw-headline") %>% html_text()
countries
html_nodes(nobel.page, "#mw-headline") %>% html_text()
html_nodes(nobel.page, "h2.mw-headline") %>% html_text()
html_nodes(nobel.page, "#h2.mw-headline") %>% html_text()
html_nodes(nobel.page, "h2") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2:nth-child(1)") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2 > mw-headline") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2:mw-headline") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2::mw-headline") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2 + mw-headline") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2 > mw-headline") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2.mw-headline") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2:first-child") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2:nth-child(2)") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2:nth-child(3)") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2:nth-child(4)") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2 > span") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2 > span:first-child") %>% html_text()
html_nodes(nobel.page, "#mw-content-text > div > h2 > span:first-child") %>% html_text()[-1]
nobel.countries <- html_nodes(nobel.page, "#mw-content-text > div > h2 > span:first-child") %>% html_text()
?extract
countries <- html_nodes(nobel.page, "#mw-content-text > div > h2 > span:first-child") %>%
html_text() %>% not("References")
?not
fix(not)
countries <- countries[-1]
countries
countries <- html_nodes(nobel.page, "#mw-content-text > div > h2 > span:first-child") %>% html_text()
countries <- countries[-c("References", "See also")]
?select
countries <- countries[-1]
countries <- countries[2:(length(countries)-2)]
countries
length(countries)
length(laureates)
laureates <- nobel.page %>% html_nodes("h2 + ol") %>% html_text()
length(laureates)
laureates
laureates <- nobel.page %>% html_nodes("h2 + li") %>% html_text()
laureates
laureates <- nobel.page %>% html_nodes("ol ~ h2") %>% html_text()
nobel.page %>% html_nodes("ol ~ h2") %>% html_text()
countries <- nobel.page %>% html_nodes("#mw-content-text > div > h2 > span:first-child") %>% html_text()
countries
laureates <- nobel.page %>% html_nodes("h2 + ol") %>% html_text()
nobel.page %>% html_nodes("h2 + ol") %>% html_text()
laureates <- nobel.page %>% html_nodes("h2 ~ ol") %>% html_text()
nobel.page %>% html_nodes("h2 ~ ol") %>% html_text()
laureates <- nobel.page %>% html_nodes("h2 ~ ol") %>% html_text()
laureates
length(laureates)
length(countries)
countries
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
countries <- nobel.page %>% html_nodes("#mw-content-text > div > h2 > span:first-child") %>% html_text()
countries <- countries[2:(length(countries)-2)]
length(countries)
countries <- nobel.page %>% html_nodes("#mw-content-text > div > h2 > span:first-child") %>% html_text()
countries
countries <- countries[2:(length(countries)-1)]
countreis
countries
countries <- countries[2:(length(countries)-2)]
laureates
length(laureates)
length(countries)
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
countries <- nobel.page %>% html_nodes("#mw-content-text > div > h2 > span:first-child") %>% html_text()
countries <- countries[2:(length(countries)-2)]
length(countries)
countries <- append(countries, "Tibet", after=55)
countries
nobel.page <- read_html("https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country")
countries <- nobel.page %>% html_nodes("#mw-content-text > div > h2 > span:first-child") %>% html_text()
countries <- countries[2:(length(countries)-2)]
countries <- append(countries, "Tibet", after=56)
all <- data.frame(countries, laureates)
all
head(all)
library(plyr)
?strsplit
strsplit(laureates[1], split="\n")
strsplilt(laureates, split="\n")
strsplit(laureates, split="\n")
laureates <- nobel.page %>% html_nodes("h2 ~ ol") %>% html_text() %>% strsplit(split="\n")
names(laureates) <- countries
laureates
ldply(laureates)
stack(laureates)
stack(laureates)
ldply(laureates)
library(dplyr)
bind_rows(laureates)
head(laureates)
laureates <- stack(laureates)
head(laureates)
laureates[1:20,]
head(laureates)
css.table <- read_html("https://en.wikipedia.org/wiki/Cascading_Style_Sheets")
html_node(nob.table, "https://en.wikipedia.org/wiki/Cascading_Style_Sheets") %>% html_table()
html_node(nob.table, "table.wikitable:nth-child(27)") %>% html_table()
html_node(css.table, "table.wikitable:nth-child(27)") %>% html_table()
nobel.table <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_Nobel_laureates_per_capita")
library(rvest)
library(magrittr)
nobel.table <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_Nobel_laureates_per_capita")
class(nobel.table)
library(rvest)
library(magrittr)
nobel.table <- read_html("https://en.wikipedia.org/wiki/List_of_countries_by_Nobel_laureates_per_capita") %>%
html_node("#mw-content-text > div > table:nth-child(9)") %>%
html_table()
head(nobel.table)
?gsub
